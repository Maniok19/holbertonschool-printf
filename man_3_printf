.TH man_3_printf "25-11-2024" "Version1.0" "_printf man page"
.SH NAME
_printf - Display function formatted in the manner of the standard printf function of the C language.
.SH SYNOPSIS
#include "main.h"
.br
int _printf(const char *format, ...);
.SH DESCRIPTION
The _printf function allows formatted text to be displayed on the screen. It uses a format string consisting of regular characters and conversion specifiers to insert values into the displayed text.
.br
The overall syntax of a conversion is:
.br
	%[flags][width][.precision][length]specifier
.TP
The available conversion specifiers are: c, s, d, i, %, b, u, o, x, X, S, p.
.SH FLAGS
The following flags are supported:
.br
+	Forces to precede the result with a plus or minus sign (+ or -) even for positive numbers.
.br
(space)	If no sign is going to be written, a blank space is inserted before the value.
.br
#	Used with o, x or X specifiers the value is preceded with 0, 0x or 0X respectively for values different than zero.
.SH LENGTH
Specifies the length of the data type. The following length modifiers are supported:
.br
l	Specifies that the argument is a long int or unsigned long int.
.br
h	Specifies that the argument is a short int or unsigned short int.
.SH CONVERSION SPECIFIERS
d, i	The int argument is converted to signed decimal notation.
.br
c	The int argument is converted to a char, and the resulting char is written.
.br
s	Characters from the array are written up to (but not included) a terminating null byte ('\0').
.br
%	A '%' is written. No argument is converted. The complete conversion specification is '%%'.
.br
b	The unsigned int argument is converted to binary notation.
.br
u	The unsigned int argument is converted to unsigned decimal notation.
.br
o	The unsigned int argument is converted to unsigned octal notation.
.br
x	The unsigned int argument is converted to unsigned hexadecimal notation, using the letters "abcdef".
.br
X	The unsigned int argument is converted to unsigned hexadecimal notation, using the letters "ABCDEF".
.br
S	The string argument is printed. Non printable characters (ASCII value < 32 or >= 127) are printed this way: \x, followed by the ASCII code value in hexadecimal (upper case - always 2 characters).
.br
p	The void * pointer argument is printed in hexadecimal.
.SH RETURN VALUE
The _printf function returns the total number of characters written (not including the final null character) if the operation was successful. If there is an error, it returns -1.
.SH BUGS
Field width and precision are not taken into account.
.SH EXAMPLES
_printf("My name is %s and i'm %d years old.\n", "Warren", 35);
.br
// Displays "My name is Warren and i'm 35 years old." followed by a newline.
.TP
_printf("That string is empty:%s, it's length is: %i.\n", "", 0);
.br
// Displays "that string is empty:, it's length is 0." followed by a newline.
.SH AUTHORS
Warren Gomez
.br
Mano Delcourt